@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" Theme="_selectedMudTheme" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudBreakpointProvider OnBreakpointChanged="((e) => BreakPointChange(e))" />

<div style="background:url(_Content/CarbonNeutral.Common/i/knight_bg.jpg) no-repeat fixed center / cover; min-height: 100vh; width: 100%; position: absolute; top: 0; left: 0; z-index: -5;">
    <MudOverlay Visible="true" DarkBackground="true" ZIndex="-2" Style="backdrop-filter: blur(10px); background-color: rgba(0,0,0,0.75); "/>
    <MudLayout>
        <CascadingValue Value=@IsMobile >
            <MudAppBar Style="Background: rgba(0,0,0,0.25); z-index: 40;" Class="animate__fadeInDown" Elevation="0" Fixed="false">
                @* <MudImage Src="_Content/CarbonNeutral.Common/i/WskLogo.svg"  /> *@
                <div style="padding-top: 15px; padding-left: 25px;">
                    <WskLogo />
                </div>
                @if (!IsMobile)
                {
                    <WskNavMenu SelectedPageClass=@selectedPageClass OnPageLinkClick=@SetPageClass />
                    <MudSpacer />
                    <WskSubNavMenu />
                }
            </MudAppBar>
            @if (IsMobile) 
            {
                <div style="position: absolute; top: 30px; right: 30px; z-index: 50;">
                    <MudIconButton  Icon="@Icons.Material.Filled.Menu" OnClick="@DrawerToggle" />
                </div>
                <MudDrawer Style="background: rgba(0,0,0,0.75); backdrop-filter: blur(15px);" @bind-Open="@_drawerOpen">
                    <div class="mt-16">
                        <WskNavMenu SelectedPageClass=@selectedPageClass OnPageLinkClick=@SetPageClass />
                    </div>
                    <WskSubNavMenu />
                </MudDrawer>
            }
            <div >
                <Breadcrumb />
                @Body
                <ModuleNav />
                <ModuleSettings />
            </div>
        </CascadingValue>
    </MudLayout>
</div>


@code {
    bool _drawerOpen;
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;
    private MudTheme _selectedMudTheme;
    private string selectedPageClass = "";
    public bool IsMobile = false;

    public void SetPageClass(string pageClass) 
    {
        @* Console.WriteLine($"SetPageClass: {pageClass}"); *@
        selectedPageClass = pageClass;
        StateHasChanged();
    }

    private void BreakPointChange(MudBlazor.Breakpoint breakpoint)
    {
        IsMobile = breakpoint == MudBlazor.Breakpoint.Xs || breakpoint == MudBlazor.Breakpoint.Sm;
    }

    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected void RedirectToLogin() {
        NavigationManager.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        _mudThemeProvider = _mudThemeProvider ?? new MudThemeProvider();
        _selectedMudTheme = MudStaticDefaultTheme.Default;
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    void Testing()
    {
        Console.WriteLine("Clicked the ellipses");
    }
 
}
        @* <MudToggleIconButton Class="px-4"  @bind-Toggled="@_isDarkMode" Icon="@Icons.Material.Filled.DarkMode" Color="@Color.Info"
            Title="Dark Mode" ToggledIcon="@Icons.Material.Filled.LightMode" ToggledColor="Color.Warning"
            ToggledTitle="Light Mode" /> *@