@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" Theme="_selectedMudTheme" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />


<div style="background:url(_Content/CarbonNeutral.Common/i/knight_bg.jpg) no-repeat fixed center / cover; min-height: 100vh; width: 100%; position: absolute; top: 0; left: 0; z-index: -5;">
<MudOverlay Visible="true" DarkBackground="true" ZIndex="-2" Style="backdrop-filter: blur(10px); background-color: rgba(0,0,0,0.75); "/>
<MudLayout>
    <MudAppBar Style="Background: transparent;" Class="animate__fadeInDown" Elevation="0" Fixed="false">
        @* <MudImage Src="_Content/CarbonNeutral.Common/i/WskLogo.svg"  /> *@
        <WskLogo />
        <WskNavMenu SelectedPageClass=@selectedPageClass OnPageLinkClick=@SetPageClass />
        @* <MudText Typo="Typo.h5" Class="ml-3 fire">WordSearchKingdom</MudText> *@
        <MudSpacer />
        <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>
                    <WskLoggedInSubNavMenu />
                </Authorized>
                <NotAuthorized>
                    <WskSubNavMenu />
                </NotAuthorized>
            </AuthorizeView>
        </CascadingAuthenticationState> 

        @* <MudToggleIconButton Class="px-4"  @bind-Toggled="@_isDarkMode" Icon="@Icons.Material.Filled.DarkMode" Color="@Color.Info"
            Title="Dark Mode" ToggledIcon="@Icons.Material.Filled.LightMode" ToggledColor="Color.Warning"
            ToggledTitle="Light Mode" /> *@
    </MudAppBar>
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" DisableOverlay="true" Elevation="2"
            Variant="@DrawerVariant.Temporary">
            <WskNavMenu SelectedPageClass=@selectedPageClass OnPageLinkClick=@SetPageClass />
        </MudDrawer>
    </MudHidden>
        @Body

</MudLayout>
</div>


@code {
    bool _drawerOpen = true;
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;
    private MudTheme _selectedMudTheme;
    private string selectedPageClass = "";

    public void SetPageClass(string pageClass) 
    {
        @* Console.WriteLine($"SetPageClass: {pageClass}"); *@
        selectedPageClass = pageClass;
        StateHasChanged();
    }


    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected void RedirectToLogin() {
        NavigationManager.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        _mudThemeProvider = _mudThemeProvider ?? new MudThemeProvider();
        _selectedMudTheme = MudStaticDefaultTheme.Default;
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    void Testing()
    {
        Console.WriteLine("Clicked the ellipses");
    }
 
}
        @* <MudToggleIconButton Class="px-4"  @bind-Toggled="@_isDarkMode" Icon="@Icons.Material.Filled.DarkMode" Color="@Color.Info"
            Title="Dark Mode" ToggledIcon="@Icons.Material.Filled.LightMode" ToggledColor="Color.Warning"
            ToggledTitle="Light Mode" /> *@