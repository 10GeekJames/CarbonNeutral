@page "/wsk/game/{GameId:guid}"

@inject IStringLocalizer<GameArea> Localize

<PageTitle>Word Search Kingdom - Game Title</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    @if(_chosenGame != null) {
        <GameComponent Game="@_chosenGame" OnRecreateGame=OnRecreateGame SelectedGridCells=SelectedGridCells SelectedGridCellPoints=SelectedGridCellPoints />
    }
</MudContainer>


@code {
    [Parameter] 
    public Guid GameId { get; set; }
    private GameViewModel _chosenGame { get; set; }
    protected char[,] SelectedGridCells { get; set; }
    protected List<System.Drawing.Point> SelectedGridCellPoints { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var gameGetByIdRequest = new GameGetByIdRequest(GameId);
        _chosenGame = await WskDataService.GameGetByIdAsync(gameGetByIdRequest);
        SelectedGridCells = GameGridUtility.ConvertRowCellStringToArray(_chosenGame.GameGrid.RowCellData);
        SelectedGridCellPoints = GameGridUtility.ConvertSelectedWordsToPointList(_chosenGame.GameGrid.CompletedWordCellData);
    }

    public async Task OnRecreateGame(){
        var request = new GameRecreateGridRequest(_chosenGame.Id);
        _chosenGame = await WskDataService.GameRecreateGridAsync(request);         
        SelectedGridCells = GameGridUtility.ConvertRowCellStringToArray(_chosenGame.GameGrid.RowCellData);
        SelectedGridCellPoints = GameGridUtility.ConvertSelectedWordsToPointList(_chosenGame.GameGrid.CompletedWordCellData);
    }
}