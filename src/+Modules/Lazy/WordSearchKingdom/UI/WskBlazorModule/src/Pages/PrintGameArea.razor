@page "/wsk/printgame/{GameId:guid}"
@layout PrintGameLayout

@inject IStringLocalizer<GameArea> Localize


<PageTitle>WSK - @_gameTitle</PageTitle>


<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    @if(_chosenGame != null) {
        <PrintGameComponent Game="@_chosenGame" SelectedGridCells=SelectedGridCells SelectedGridCellPoints=SelectedGridCellPoints />
    }
</MudContainer>



@code {
    [Parameter] 
    public Guid GameId { get; set; }
    public Guid GameInstanceId { get; set; }    
    private GameViewModel _chosenGame { get; set; }
    private string _gameTitle { get; set; } = "Word Search Title";
    protected char[,] SelectedGridCells { get; set; }
    protected List<System.Drawing.Point> SelectedGridCellPoints { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var gameGetFullGridRequest = new GameGetFullGridRequest(GameId, GameInstanceId);        
        _chosenGame = await WskDataService.GameGetFullGridAsync(gameGetFullGridRequest);
        GameInstanceId = _chosenGame.GameGrid.GameGridInstance.Id;
        @* Console.WriteLine($"{_chosenGame.GameGrid.GameGridInstance.Id}"); *@
    
        SelectedGridCells = GameGridUtility.ConvertRowCellStringToArray(_chosenGame.GameGrid.RowCellData);
        SelectedGridCellPoints = GameGridUtility.ConvertSelectedWordsToPointList(_chosenGame.GameGrid.GameGridInstance.CompletedWordCellData);        
        _gameTitle = _chosenGame.Title;
    }
}