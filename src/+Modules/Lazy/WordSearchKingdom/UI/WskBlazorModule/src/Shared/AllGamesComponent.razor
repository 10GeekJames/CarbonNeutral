@inject IStringLocalizer<AllGamesComponent> Localize

<div>
    <p>Word Seach Kingdom - General Lazy Module</p>

    <MudTable Id="AllGamesStaticTable" Items="@_games" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Title</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Title</MudTd>
        </RowTemplate>
    </MudTable>

    @* @foreach(var game in _games) {
        <div>@game.Title</div>   
        @foreach (var word in game.GameGrid.HiddenWords)
        {
            <p>@word.Word</p>
        }   

        <table style="border-collapse: collapse; line-height: 1.4;">
            @for (var x = 0; x < game.GameGrid.Width; x++) {
                <tr>
                    @for (var y = 0; y < game.GameGrid.Height; y++) {
                        var rowCell = game.GameGrid.RowCells.First(rs => rs.X == x && rs.Y == y);
                        <td style="border: 1px solid white; height: 14px; min-width: 14px; text-align: center; user-select: none; padding: 4px; transform: scale(1, 0.8)">@rowCell.Letter</td>
                    }
                </tr>
            }
        </table>  
    } *@

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => LoadSelectedGame(_games.FirstOrDefault())" >Load Checked</MudButton>    
</div>

@code {
    private List<GameViewModel> _games = new();
    [Parameter]
    public EventCallback<GameViewModel> OnChosenGame { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();                     
        var GamesGetAllQry = new GamesGetAllQry();
        _games = await WskDataService.GamesGetAllAsync(GamesGetAllQry);
    }

    protected Task LoadSelectedGame(GameViewModel game) {
        return OnChosenGame.InvokeAsync(game);
    }
}
