@page "/liveRoom/DevPlayGround"

@inject IStringLocalizer<DevPlayGround> Localize

<PageTitle>DevPlayGround</PageTitle>

<MudField Label="Test Ground" Variant="Variant.Outlined">
    <MudGrid Class="pa-4">
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudNumericField Min=0 Label="Grid Size" Required="true" RequiredError="Grid Size is required!"  />
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudButton Class="align-self-center" Variant="Variant.Filled" Color="Color.Primary">Create LiveRoomSession</MudButton>
    </MudGrid>
</MudField>
<MudField Label="Test Ground" Variant="Variant.Outlined" Class="pt-16">
    <MudGrid Class="pa-4">
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudNumericField Min=0 Label="Grid Size" Required="true" RequiredError="Grid Size is required!"  />
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudButton Class="align-self-center" Variant="Variant.Filled" Color="Color.Primary">Create LiveRoomSession</MudButton>
    </MudGrid>
</MudField>
<MudField Label="Test Ground" Variant="Variant.Outlined">
    <MudGrid Class="pa-4">
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudNumericField Min=0 Label="Grid Size" Required="true" RequiredError="Grid Size is required!"  />
        <MudTextField T="string" Label="LiveRoomSession Title" Required="true" RequiredError="LiveRoomSession Title is required!" />
        <MudButton Class="align-self-center" Variant="Variant.Filled" Color="Color.Primary">Create LiveRoomSession</MudButton>
    </MudGrid>
</MudField>

@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

}