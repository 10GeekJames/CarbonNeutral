// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using LiveRoomInfrastructure.Data;

#nullable disable

namespace LiveRoomApplication.Data.Migrations
{
    [DbContext(typeof(LiveRoomDbContext))]
    [Migration("20230810225025_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LiveRoomSessionLiveRoomSessionCategory", b =>
                {
                    b.Property<Guid>("LiveRoomSessionCategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LiveRoomSessionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LiveRoomSessionCategoriesId", "LiveRoomSessionsId");

                    b.HasIndex("LiveRoomSessionsId");

                    b.ToTable("LiveRoomSessionLiveRoomSessionCategory");
                });

            modelBuilder.Entity("LiveRoomSessionLiveRoomSessionTag", b =>
                {
                    b.Property<Guid>("LiveRoomSessionTagsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LiveRoomSessionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LiveRoomSessionTagsId", "LiveRoomSessionsId");

                    b.HasIndex("LiveRoomSessionsId");

                    b.ToTable("LiveRoomSessionLiveRoomSessionTag");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LiveRoomSessionDifficulty")
                        .HasColumnType("int");

                    b.Property<Guid>("LiveRoomSessionGridId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KnownUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LiveRoomSessionGridId");

                    b.ToTable("LiveRoomSessions");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSessionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LiveRoomSessionCategories");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSessionGrid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompletedWordCellData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("RowCellData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LiveRoomSessionGrids");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSessionTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LiveRoomSessionTags");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.HiddenWord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LiveRoomSessionGridId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LiveRoomSessionGridId");

                    b.ToTable("HiddenWords");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.RowCell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompletedSet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEndHighlight")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStartHighlight")
                        .HasColumnType("bit");

                    b.Property<string>("Letter")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Pigment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RowCells");
                });

            modelBuilder.Entity("LiveRoomSessionLiveRoomSessionCategory", b =>
                {
                    b.HasOne("LiveRoomCore.Entities.LiveRoomSessionCategory", null)
                        .WithMany()
                        .HasForeignKey("LiveRoomSessionCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiveRoomCore.Entities.LiveRoomSession", null)
                        .WithMany()
                        .HasForeignKey("LiveRoomSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiveRoomSessionLiveRoomSessionTag", b =>
                {
                    b.HasOne("LiveRoomCore.Entities.LiveRoomSessionTag", null)
                        .WithMany()
                        .HasForeignKey("LiveRoomSessionTagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiveRoomCore.Entities.LiveRoomSession", null)
                        .WithMany()
                        .HasForeignKey("LiveRoomSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSession", b =>
                {
                    b.HasOne("LiveRoomCore.Entities.LiveRoomSessionGrid", "LiveRoomSessionGrid")
                        .WithMany()
                        .HasForeignKey("LiveRoomSessionGridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LiveRoomSessionGrid");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.HiddenWord", b =>
                {
                    b.HasOne("LiveRoomCore.Entities.LiveRoomSessionGrid", null)
                        .WithMany("HiddenWords")
                        .HasForeignKey("LiveRoomSessionGridId");
                });

            modelBuilder.Entity("LiveRoomCore.Entities.LiveRoomSessionGrid", b =>
                {
                    b.Navigation("HiddenWords");
                });
#pragma warning restore 612, 618
        }
    }
}
